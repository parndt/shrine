"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3966],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),i=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,p=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=i(a),k=r,u=c["".concat(s,".").concat(k)]||c[k]||d[k]||p;return a?n.createElement(u,o(o({ref:t},m),{},{components:a})):n.createElement(u,o({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=a.length,o=new Array(p);o[0]=k;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var i=2;i<p;i++)o[i]=a[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},1598:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var n=a(7462),r=a(3366),p=(a(7294),a(3905)),o=["components"],l={title:"Shrine 2.11.0"},s=void 0,i={unversionedId:"release_notes/2.11.0",id:"release_notes/2.11.0",title:"Shrine 2.11.0",description:"New features",source:"@site/../doc/release_notes/2.11.0.md",sourceDirName:"release_notes",slug:"/release_notes/2.11.0",permalink:"/docs/release_notes/2.11.0",draft:!1,editUrl:"https://github.com/shrinerb/shrine/edit/master/doc/../doc/release_notes/2.11.0.md",tags:[],version:"current",lastUpdatedBy:"Janko Marohni\u0107",lastUpdatedAt:1571049580,formattedLastUpdatedAt:"Oct 14, 2019",frontMatter:{title:"Shrine 2.11.0"},sidebar:"release_notes",previous:{title:"Shrine 2.12.0",permalink:"/docs/release_notes/2.12.0"},next:{title:"Shrine 2.10.1",permalink:"/docs/release_notes/2.10.1"}},m={},c=[{value:"New features",id:"new-features",level:2},{value:"Other improvements",id:"other-improvements",level:2},{value:"Regressions",id:"regressions",level:2},{value:"Backwards compatibility",id:"backwards-compatibility",level:2}],d={toc:c},k="wrapper";function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,p.kt)(k,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h2",{id:"new-features"},"New features"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"Shrine::UploadedFile#stream")," has been added for streaming the uploaded\ncontent to a writable destination.")),(0,p.kt)("div",{"data-rehype-pretty-code-fragment":""},(0,p.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,p.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,p.kt)("span",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"uploaded_file.stream("),(0,p.kt)("span",{parentName:"span",style:{color:"#97E1F1",fontStyle:"italic"}},"StringIO"),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"."),(0,p.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"new"),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},")")),"\n",(0,p.kt)("span",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},"# or")),"\n",(0,p.kt)("span",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"uploaded_file.stream("),(0,p.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,p.kt)("span",{parentName:"span",style:{color:"#E7EE98"}},"/path/to/destination"),(0,p.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},")"))))),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"Shrine.with_file")," has been added for temporarily converting an IO-like\nobject into a file. This is useful when wanting to extract metadata using an\nanalyzer which requires the source file to be on disk.")),(0,p.kt)("div",{"data-rehype-pretty-code-fragment":""},(0,p.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,p.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,p.kt)("span",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"add_metadata "),(0,p.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"do"),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," |io, context|")),"\n",(0,p.kt)("span",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"  movie "),(0,p.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"="),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,p.kt)("span",{parentName:"span",style:{color:"#97E1F1",fontStyle:"italic"}},"Shrine"),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},".with_file(io) { |file| "),(0,p.kt)("span",{parentName:"span",style:{color:"#97E1F1",fontStyle:"italic"}},"FFMPEG"),(0,p.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"::"),(0,p.kt)("span",{parentName:"span",style:{color:"#97E1F1",fontStyle:"italic"}},"Movie"),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"."),(0,p.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"new"),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"(file.path) }")),"\n",(0,p.kt)("span",{parentName:"code",className:"line"}),"\n",(0,p.kt)("span",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"  { "),(0,p.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,p.kt)("span",{parentName:"span",style:{color:"#E7EE98"}},"duration"),(0,p.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"   "),(0,p.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"=>"),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," movie.duration,")),"\n",(0,p.kt)("span",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"    "),(0,p.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,p.kt)("span",{parentName:"span",style:{color:"#E7EE98"}},"bitrate"),(0,p.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"    "),(0,p.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"=>"),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," movie.bitrate,")),"\n",(0,p.kt)("span",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"    "),(0,p.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,p.kt)("span",{parentName:"span",style:{color:"#E7EE98"}},"resolution"),(0,p.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,p.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"=>"),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," movie.resolution,")),"\n",(0,p.kt)("span",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"    "),(0,p.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,p.kt)("span",{parentName:"span",style:{color:"#E7EE98"}},"frame_rate"),(0,p.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,p.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"=>"),(0,p.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," movie.frame_rate }")),"\n",(0,p.kt)("span",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"end"))))),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"The ",(0,p.kt)("inlineCode",{parentName:"p"},"upload_endpoint")," plugin now accepts the ",(0,p.kt)("inlineCode",{parentName:"p"},"Content-MD5")," request header,\nin which case it will verify the provided checksum.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Shrine::Storage::S3#presign")," now accepts ",(0,p.kt)("inlineCode",{parentName:"p"},"method: :put")," for changing from a\nPOST to a PUT presigned URL. PUT presigned URLs are generally preferred as\nthey support more parameters, such as ",(0,p.kt)("inlineCode",{parentName:"p"},":content_md5")," for specifying the\nchecksum."))),(0,p.kt)("h2",{id:"other-improvements"},"Other improvements"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Shrine::UploadedFile#download")," will now reuse an already opened file, and\nin this case will simply rewind it after it's finished.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"The ",(0,p.kt)("inlineCode",{parentName:"p"},":mini_magick")," and ",(0,p.kt)("inlineCode",{parentName:"p"},":ruby_vips")," dimensions analyzers now silently fail\non processing errors, to allow validations to be reached when invalid file\nis attached.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"The ",(0,p.kt)("inlineCode",{parentName:"p"},"#presign")," storage method can now return a Hash. This means it's not\nrequired for result to be wrapped in a ",(0,p.kt)("inlineCode",{parentName:"p"},"Struct")," or ",(0,p.kt)("inlineCode",{parentName:"p"},"OpenStruct")," anymore.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"The ",(0,p.kt)("inlineCode",{parentName:"p"},"Shrine::Storage::S3#presign")," now also returns a ",(0,p.kt)("inlineCode",{parentName:"p"},":method")," value\nindicating the HTTP verb that needs to be used for the direct upload.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"The bucket name is not removed from S3 URL path anymore when both ",(0,p.kt)("inlineCode",{parentName:"p"},":host"),"\nand ",(0,p.kt)("inlineCode",{parentName:"p"},":force_path_style")," are set in ",(0,p.kt)("inlineCode",{parentName:"p"},"Shrine::Storage::S3#url"),"."))),(0,p.kt)("h2",{id:"regressions"},"Regressions"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"The MIME type is now correctly determined on empty files for ",(0,p.kt)("inlineCode",{parentName:"li"},":mime_types"),"\nand ",(0,p.kt)("inlineCode",{parentName:"li"},":mini_mime")," analyzers. This regression was introduced in Shrine 2.7.0.")),(0,p.kt)("h2",{id:"backwards-compatibility"},"Backwards compatibility"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"The ",(0,p.kt)("inlineCode",{parentName:"p"},"direct_upload")," plugin has been deprecated in favour of ",(0,p.kt)("inlineCode",{parentName:"p"},"upload_endpoint"),"\nand ",(0,p.kt)("inlineCode",{parentName:"p"},"presign_endpoint")," plugins. The ",(0,p.kt)("inlineCode",{parentName:"p"},"direct_upload")," plugin will be removed in\nShrine 3.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Storage#presign")," returning an object that doesn't respond to ",(0,p.kt)("inlineCode",{parentName:"p"},"#to_h")," is now\ndeprecated, the support for these objects will be removed in Shrine 3.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Shrine::Storage::S3#presign")," now returns a ",(0,p.kt)("inlineCode",{parentName:"p"},"Struct")," instead of an\n",(0,p.kt)("inlineCode",{parentName:"p"},"Aws::S3::PresignedPost")," object. Any applications relying on any methods\nother than ",(0,p.kt)("inlineCode",{parentName:"p"},"#url")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"#fields")," will have to update their code."))))}u.isMDXComponent=!0}}]);