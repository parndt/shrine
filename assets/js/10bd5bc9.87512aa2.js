"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5799],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),l=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(a),u=r,k=m["".concat(i,".").concat(u)]||m[u]||d[u]||o;return a?n.createElement(k,p(p({ref:t},c),{},{components:a})):n.createElement(k,p({ref:t},c))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,p=new Array(o);p[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[m]="string"==typeof e?e:r,p[1]=s;for(var l=2;l<o;l++)p[l]=a[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6573:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>k,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),p=["components"],s={title:"Shrine 2.15.0"},i=void 0,l={unversionedId:"release_notes/2.15.0",id:"release_notes/2.15.0",title:"Shrine 2.15.0",description:"New features",source:"@site/../doc/release_notes/2.15.0.md",sourceDirName:"release_notes",slug:"/release_notes/2.15.0",permalink:"/docs/release_notes/2.15.0",draft:!1,editUrl:"https://github.com/shrinerb/shrine/edit/master/doc/../doc/release_notes/2.15.0.md",tags:[],version:"current",lastUpdatedBy:"Janko Marohni\u0107",lastUpdatedAt:1571049580,formattedLastUpdatedAt:"Oct 14, 2019",frontMatter:{title:"Shrine 2.15.0"},sidebar:"release_notes",previous:{title:"Shrine 2.16.0",permalink:"/docs/release_notes/2.16.0"},next:{title:"Shrine 2.14.0",permalink:"/docs/release_notes/2.14.0"}},c={},m=[{value:"New features",id:"new-features",level:2},{value:"Other improvements",id:"other-improvements",level:2},{value:"Backwards compatibility",id:"backwards-compatibility",level:2}],d={toc:m},u="wrapper";function k(e){var t=e.components,a=(0,r.Z)(e,p);return(0,o.kt)(u,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"new-features"},"New features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The ",(0,o.kt)("a",{parentName:"p",href:"https://shrinerb.com/docs/plugins/derivation_endpoint"},(0,o.kt)("inlineCode",{parentName:"a"},"derivation_endpoint"))," plugin has been added, which\nprovides on-the-fly processing functionality, similar to what Dragonfly,\nRefile, and Active Storage provide. It's suitable for fast transformations,\nsuch as generating image thumbnails or document previews."),(0,o.kt)("p",{parentName:"li"},"Rather than encoding processing steps in the URL (like Dragonfly and Active\nStorage do), with ",(0,o.kt)("inlineCode",{parentName:"p"},"derivation_endpoint"),' you generate URLs to named\n"derivation" blocks, passing any arguments you need for the processing.'),(0,o.kt)("div",{parentName:"li","data-rehype-pretty-code-fragment":""},(0,o.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,o.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"photo.image.derivation_url("),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},":thumbnail"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},", "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},"600"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},", "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},"400"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},")")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},'#=> "derivations/image/thumbnail/600/400/eyJpZCI6ImZvbyIsInN0b3JhZ2UiOiJzdG9yZSJ9?signature=..."'))))),(0,o.kt)("p",{parentName:"li"},"When the URL is requested, it's routed to a Rack app that you mount in your\nrouter, which knows how to resolve the HTTP request, call the appropriate\nprocessing, and generate an HTTP response."),(0,o.kt)("div",{parentName:"li","data-rehype-pretty-code-fragment":""},(0,o.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,o.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},"# config/routes.rb (Rails)")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#97E1F1",fontStyle:"italic"}},"Rails"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},".application.routes.draw "),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"do")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"  mount "),(0,o.kt)("span",{parentName:"span",style:{color:"#97E1F1",fontStyle:"italic"}},"ImageUploader"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},".derivation_endpoint "),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"=>"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,o.kt)("span",{parentName:"span",style:{color:"#E7EE98"}},"derivations/images"),(0,o.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"')),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"end"))))),(0,o.kt)("p",{parentName:"li"},"In this case the endpoint will call the ",(0,o.kt)("inlineCode",{parentName:"p"},":thumbnail")," derivation block defined\nin our uploader, passing it the source file and derivation arguments (in this\ncase thumbnail dimensions). We can then generate the thumbnail inside the\nblock:"),(0,o.kt)("div",{parentName:"li","data-rehype-pretty-code-fragment":""},(0,o.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,o.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"require"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,o.kt)("span",{parentName:"span",style:{color:"#E7EE98"}},"image_processing/mini_magick"),(0,o.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"')),"\n",(0,o.kt)("span",{parentName:"code",className:"line"}),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"class"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#97E1F1"}},"ImageUploader"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"<"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#97E1F1",fontStyle:"italic"}},"Shrine")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"  derivation "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},":thumbnail"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"do"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," |file, width, height|")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"    "),(0,o.kt)("span",{parentName:"span",style:{color:"#97E1F1",fontStyle:"italic"}},"ImageProcessing"),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"::"),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},"MiniMagick")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"      .source(file)")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"      .resize_to_limit!(width.to_i, height.to_i)")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"  "),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"end")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"end"))))),(0,o.kt)("p",{parentName:"li"},"The derivation URLs are signed with the secret key provided when loading the\nplugin, to prevent tampering and potential DoS attacks."),(0,o.kt)("div",{parentName:"li","data-rehype-pretty-code-fragment":""},(0,o.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,o.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"plugin "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},":derivation_endpoint"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},", secret_key"),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},":"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'),(0,o.kt)("span",{parentName:"span",style:{color:"#E7EE98"}},"<YOUR SECRET KEY>"),(0,o.kt)("span",{parentName:"span",style:{color:"#DEE492"}},'"'))))),(0,o.kt)("p",{parentName:"li"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"derivation_endpoint")," plugin is highly configurable, you can set a ",(0,o.kt)("a",{parentName:"p",href:"https://shrinerb.com/docs/plugins/derivation_endpoint#host"},"CDN\nhost"),", change response headers of derivatives (",(0,o.kt)("a",{parentName:"p",href:"https://shrinerb.com/docs/plugins/derivation_endpoint#content-type"},(0,o.kt)("inlineCode",{parentName:"a"},"Content-Type")),",\n",(0,o.kt)("a",{parentName:"p",href:"https://shrinerb.com/docs/plugins/derivation_endpoint#content-disposition"},(0,o.kt)("inlineCode",{parentName:"a"},"Content-Disposition")),"), add ",(0,o.kt)("a",{parentName:"p",href:"https://shrinerb.com/docs/plugins/derivation_endpoint#expiration"},"URL expiration"),", ",(0,o.kt)("a",{parentName:"p",href:"https://shrinerb.com/docs/plugins/derivation_endpoint#uploading"},"cache"),"\ngenerated derivatives to a Shrine storage and more. Check out the\n",(0,o.kt)("a",{parentName:"p",href:"https://shrinerb.com/docs/plugins/derivation_endpoint"},"documentation")," for more details."))),(0,o.kt)("h2",{id:"other-improvements"},"Other improvements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},":marcel")," MIME type analyzer in ",(0,o.kt)("inlineCode",{parentName:"p"},"determine_mime_type")," plugin now uses the\nfile extension to more accurately determine the correct MIME type.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"tempfile")," plugin modifies ",(0,o.kt)("inlineCode",{parentName:"p"},"Shrine.with_file")," to return the cached\ndownloaded file for the same ",(0,o.kt)("inlineCode",{parentName:"p"},"Shrine::UploadedFile")," object (instead of\ncopying to a new file each time). However, because the same file object was\nreturned, using ",(0,o.kt)("inlineCode",{parentName:"p"},"Shrine.with_file")," wasn't thread safe. This is now fixed by\nreturning a different File object on each invocation (but still pointing to\nthe same file on disk)."))),(0,o.kt)("h2",{id:"backwards-compatibility"},"Backwards compatibility"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"Shrine.download_endpoint")," call provided by the ",(0,o.kt)("inlineCode",{parentName:"li"},"download_endpoint"),"\nplugin now returns a new Rack app object each time it's called. If you were\nrelying on multiple invocations returning the same object, you will need to\nmodify your code.")))}k.isMDXComponent=!0}}]);