"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6847],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),s=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=s(a),h=r,u=c["".concat(i,".").concat(h)]||c[h]||d[h]||o;return a?n.createElement(u,l(l({ref:t},m),{},{components:a})):n.createElement(u,l({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=h;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[c]="string"==typeof e?e:r,l[1]=p;for(var s=2;s<o;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},15:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>p,metadata:()=>s,toc:()=>c});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),l=["components"],p={title:"Shrine 2.1.0"},i="Improvements",s={unversionedId:"release_notes/2.1.0",id:"release_notes/2.1.0",title:"Shrine 2.1.0",description:"* The versions plugin doesn't require the :names option anymore.",source:"@site/../doc/release_notes/2.1.0.md",sourceDirName:"release_notes",slug:"/release_notes/2.1.0",permalink:"/docs/release_notes/2.1.0",draft:!1,editUrl:"https://github.com/shrinerb/shrine/edit/master/doc/../doc/release_notes/2.1.0.md",tags:[],version:"current",lastUpdatedBy:"Janko Marohni\u0107",lastUpdatedAt:1645289847,formattedLastUpdatedAt:"Feb 19, 2022",frontMatter:{title:"Shrine 2.1.0"},sidebar:"release_notes",previous:{title:"Shrine 2.1.1",permalink:"/docs/release_notes/2.1.1"},next:{title:"Shrine 2.0.1",permalink:"/docs/release_notes/2.0.1"}},m={},c=[],d={toc:c},h="wrapper";function u(e){var t=e.components,a=(0,r.Z)(e,l);return(0,o.kt)(h,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"improvements"},"Improvements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The versions plugin doesn't require the ",(0,o.kt)("inlineCode",{parentName:"p"},":names")," option anymore.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The restore_cached_data plugin will now download only a small portion of the\nfile needed for extracting metadata (after which it will terminate the\nconnection). Previously the whole file was always downloaded. To get this\nyou need to update your storage gem.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"When enforcing that the input is an IO-like object Shrine doesn't check\nmethod arity anymore, only if the object responds to that method. This means\nthat Shrine now properly works with objects like ",(0,o.kt)("inlineCode",{parentName:"p"},"Rack::Test::UploadedFile"),",\nwhich use ",(0,o.kt)("inlineCode",{parentName:"p"},"#method_missing")," to delegate to the underlying object.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Fixed a load order bug with parallelize and logging plugins, where loading\nthem in this order would make the thread pool join ",(0,o.kt)("em",{parentName:"p"},"outside")," of the logging\nblock, making the logs show an instantaneous duration instead of the actual\nduration.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"file")," command from the determine_mime_type plugin is now executed in the\nsame way for files as for other IO objects.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Increase the amount of bytes read from the IO in determine_mime_type when\nusing ",(0,o.kt)("inlineCode",{parentName:"p"},":file")," or ",(0,o.kt)("inlineCode",{parentName:"p"},":filemagic")," analyzers, which might make the recognize some\nMIME types that they haven't before."))),(0,o.kt)("h1",{id:"backwards-compatibility"},"Backwards compatibility"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Generating versions in ",(0,o.kt)("inlineCode",{parentName:"p"},":cache")," phase is now deprecated, for better security.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"#cached_<attachment>_data="),' method that comes from the\ncached_attachment_data plugin is now deprecated. The reason for this is that\nthe following "recommended" usage actually produces bugs when image is\ninvalid:'))),(0,o.kt)("div",{"data-rehype-pretty-code-fragment":""},(0,o.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,o.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"form_for "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE",fontStyle:"italic"}},"@photo"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"do"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," |f|")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"  f.hidden_field "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},":cached_image_data")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"  f.file_filed "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},":image")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"end"))))),(0,o.kt)("p",null,"  The recommended and correct way now to build forms is by keeping the\n",(0,o.kt)("inlineCode",{parentName:"p"},"#<attachment>=")," setter:"),(0,o.kt)("div",{"data-rehype-pretty-code-fragment":""},(0,o.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,o.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"form_for "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE",fontStyle:"italic"}},"@photo"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"do"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," |f|")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"  f.hidden_field "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},":image"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},", value"),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},":"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE",fontStyle:"italic"}},"@photo"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},".cached_image_data, id"),(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},":"),(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},"nil")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"  f.file_filed "),(0,o.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},":image")),"\n",(0,o.kt)("span",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"end"))))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The restore_cached_data now sends the ",(0,o.kt)("inlineCode",{parentName:"p"},"Shrine::UploadedFile")," to\n",(0,o.kt)("inlineCode",{parentName:"p"},"#extract_metadata"),", instead of the result of ",(0,o.kt)("inlineCode",{parentName:"p"},"Storage#open"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Storages which use ",(0,o.kt)("inlineCode",{parentName:"p"},"#stream")," should switch to ",(0,o.kt)("inlineCode",{parentName:"p"},"Down.open")," for remote files, or\nthe generic ",(0,o.kt)("inlineCode",{parentName:"p"},"Down::ChunkedIO")," in other cases."))))}u.isMDXComponent=!0}}]);