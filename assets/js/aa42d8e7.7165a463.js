"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[81],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>k});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),i=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):p(p({},a),e)),t},c=function(e){var a=i(e.components);return n.createElement(o.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=i(t),u=r,k=d["".concat(o,".").concat(u)]||d[u]||m[u]||l;return t?n.createElement(k,p(p({ref:a},c),{},{components:t})):n.createElement(k,p({ref:a},c))}));function k(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,p=new Array(l);p[0]=u;var s={};for(var o in a)hasOwnProperty.call(a,o)&&(s[o]=a[o]);s.originalType=e,s[d]="string"==typeof e?e:r,p[1]=s;for(var i=2;i<l;i++)p[i]=t[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8168:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>k,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var n=t(7462),r=t(3366),l=(t(7294),t(3905)),p=["components"],s={title:"Rack File"},o=void 0,i={unversionedId:"plugins/rack_file",id:"plugins/rack_file",title:"Rack File",description:"The rackfile plugin enables uploaders to accept Rack uploaded",source:"@site/../doc/plugins/rack_file.md",sourceDirName:"plugins",slug:"/plugins/rack_file",permalink:"/docs/plugins/rack_file",draft:!1,editUrl:"https://github.com/shrinerb/shrine/edit/master/doc/../doc/plugins/rack_file.md",tags:[],version:"current",lastUpdatedBy:"Janko Marohni\u0107",lastUpdatedAt:1571049580,formattedLastUpdatedAt:"Oct 14, 2019",frontMatter:{title:"Rack File"},sidebar:"plugins",previous:{title:"Data URI",permalink:"/docs/plugins/data_uri"},next:{title:"Remote URL",permalink:"/docs/plugins/remote_url"}},c={},d=[{value:"Usage",id:"usage",level:2},{value:"API",id:"api",level:2}],m={toc:d},u="wrapper";function k(e){var a=e.components,t=(0,r.Z)(e,p);return(0,l.kt)(u,(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/shrinerb/shrine/blob/master/lib/shrine/plugins/rack_file.rb"},(0,l.kt)("inlineCode",{parentName:"a"},"rack_file"))," plugin enables uploaders to accept Rack uploaded\nfile hashes for uploading."),(0,l.kt)("div",{"data-rehype-pretty-code-fragment":""},(0,l.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,l.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"plugin "),(0,l.kt)("span",{parentName:"span",style:{color:"#BF9EEE"}},":rack_file"))))),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("p",null,"When a file is uploaded to your Rack application using the\n",(0,l.kt)("inlineCode",{parentName:"p"},"multipart/form-data")," parameter encoding, Rack converts the uploaded file to a\nhash."),(0,l.kt)("div",{"data-rehype-pretty-code-fragment":""},(0,l.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,l.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"file_hash "),(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},"#=>")),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},"# {")),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},'#   :name => "file",')),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},'#   :filename => "cats.png",')),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},'#   :type => "image/png",')),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},"#   :tempfile => #<Tempfile:/var/folders/3n/3asd/-Tmp-/RackMultipart201-1476-nfw2-0>,")),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},'#   :head => "Content-Disposition: form-data; ...",')),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},"# }"))))),(0,l.kt)("p",null,"Since Shrine only accepts IO objects, you would normally need to fetch the\n",(0,l.kt)("inlineCode",{parentName:"p"},":tempfile")," object and pass it directly. This plugin enables the attacher to\naccept the Rack uploaded file hash directly, which is convenient when doing\nmass attribute assignment."),(0,l.kt)("div",{"data-rehype-pretty-code-fragment":""},(0,l.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,l.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"user.avatar "),(0,l.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"="),(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," file_hash")),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},"# or")),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"attacher.assign(file_hash)"))))),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("p",null,"Internally the Rack uploaded file hash will be converted into an IO object\nusing ",(0,l.kt)("inlineCode",{parentName:"p"},"Shrine.rack_file"),", which you can also use directly:"),(0,l.kt)("div",{"data-rehype-pretty-code-fragment":""},(0,l.kt)("pre",{parentName:"div","data-language":"rb","data-theme":"default"},(0,l.kt)("code",{parentName:"pre","data-language":"rb","data-theme":"default"},(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},"# or YourUploader.rack_file(file_hash)")),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"io "),(0,l.kt)("span",{parentName:"span",style:{color:"#F286C4"}},"="),(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}}," "),(0,l.kt)("span",{parentName:"span",style:{color:"#97E1F1",fontStyle:"italic"}},"Shrine"),(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},".rack_file(file_hash)")),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"io.original_filename "),(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},'#=> "cats.png"')),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"io.content_type      "),(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},'#=> "image/png"')),"\n",(0,l.kt)("span",{parentName:"code",className:"line"},(0,l.kt)("span",{parentName:"span",style:{color:"#F6F6F4"}},"io.size              "),(0,l.kt)("span",{parentName:"span",style:{color:"#7B7F8B"}},"#=> 58342"))))),(0,l.kt)("p",null,"Note that this plugin is not needed in Rails applications, as Rails already\nwraps the Rack uploaded file hash into an ",(0,l.kt)("inlineCode",{parentName:"p"},"ActionDispatch::Http::UploadedFile"),"\nobject."))}k.isMDXComponent=!0}}]);